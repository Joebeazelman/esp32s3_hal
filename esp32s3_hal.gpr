with "config/esp32s3_hal_config.gpr";
library project Esp32s3_Hal is
   for Runtime ("Ada") use Project'Project_Dir & "../light_xtensa_esp";
   for Target use "xtensa-esp32-elf";
   for Languages use ("Ada", "C");

   for Library_Name use "Esp32s3_Hal";
   for Library_Version use Project'Library_Name & ".so." & Esp32s3_Hal_Config.Crate_Version;

   for Source_Dirs use ("src/", "src/esp32s3", "src/esp32", "src/svd", "config/", Esp32s3_Hal_Config.Startup_Script_Dir);

   for Object_Dir use "obj/" & Esp32s3_Hal_Config.Build_Profile;
   for Create_Missing_Dirs use "True";
   for Library_Dir use "lib";

   type Library_Type_Type is ("relocatable", "static", "static-pic");
   Library_Type : Library_Type_Type := 
     external ("ESP32S3_HAL_LIBRARY_TYPE", external ("LIBRARY_TYPE", "static"));

   for Library_Kind use Library_Type;

   Ada_Compiler_Switches := Esp32s3_Hal_Config.Ada_Compiler_Switches &
   (
      "-O3" -- Optimize for performance
      ,"-gnatn" -- Enable inlining
      ,"-ffunction-sections" -- Separate ELF section for each function
      ,"-fdata-sections" -- Separate ELF section for each variable
      ,"-gnatW8" -- UTF-8 encoding for wide characters
   );

   C_Compiler_Switches := (
      "-W", "-Wall", "-Wextra", "-Werror", "-Wundef", "-Wshadow", "-pedantic",
      "-Wdouble-promotion", "-fno-common", "-Wconversion", "-mlongcalls", 
      "-mtext-section-literals", "-Os", "-ffunction-sections", "-fdata-sections",
      "-nostdlib"
   );

   package Compiler is
      for Default_Switches ("Ada") use Ada_Compiler_Switches;
      for Default_Switches ("C") use C_Compiler_Switches;
   end Compiler;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

   package Install is
      for Artifacts (".") use ("share");
   end Install;

   package Linker is
      Options := ("-Wl,--no-warn-rwx-segments", "-Wl,--no-warn-execstack", "-Wl,-nostdlib", "-Wl,--gc-sections");
      case Esp32s3_Hal_Config.Linker_Script_Path is
         when "" => 
            null;
         when others => 
            Options := Options & ("-T" & Project'Project_Dir & Esp32s3_Hal_Config.Linker_Script_Path);
      end case;
      for Switches ("C") use Options;
   end Linker;

   package Pretty_Printer is
      for Switches ("ada") use ("-i3", "-M120", "-v", "-w", "-rnb", "-A1", "-A2", 
         "-A3", "-A4", "-A5", "--no-separate-is", "--no-separate-loop-then");
   end Pretty_Printer;

end Esp32s3_Hal;
